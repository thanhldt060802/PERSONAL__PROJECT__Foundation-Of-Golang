package constant

import "fmt"

type ERROR_CODE string
type ERROR_MSG error
type SERVICE_RELATION_TYPE string

const (
	RELATION_TYPE_OWNER SERVICE_RELATION_TYPE = "owner"
	RELATION_TYPE_GRANT SERVICE_RELATION_TYPE = "grant"
)

var (
	LAYOUT_DATE_TIME_WITH_TZ = "2006-01-02T15:04:05+07:00"
)

var (

	// forbidden
	ERR_UNAUTHORIZED             ERROR_CODE = "ERR_UNAUTHORIZED"
	ERR_FORBIDDEN                ERROR_CODE = "ERR_FORBIDDEN"
	ERR_SERVICE_UNAVAILABLE      ERROR_CODE = "ERR_SERVICE_UNAVAILABLE"
	ERR_INTERNAL_SERVER_ERROR    ERROR_CODE = "ERR_INTERNAL_SERVER_ERROR"
	ERR_NOT_IMPLEMENTED          ERROR_CODE = "ERR_NOT_IMPLEMENTED"
	ERR_NOT_IMPLEMENT_FOR_MASTER ERROR_CODE = "ERR_NOT_IMPLEMENT_FOR_MASTER"
	ERR_DB_CONNECTION_ERROR      ERROR_CODE = "ERR_DB_CONNECTION_ERROR"
	ERR_FILE_NOT_FOUND           ERROR_CODE = "ERR_FILE_NOT_FOUND"
	// token
	ERR_TOKEN_IS_EMPTY   ERROR_CODE = "ERR_TOKEN_IS_EMPTY"
	ERR_TOKEN_IS_INVALID ERROR_CODE = "ERR_TOKEN_IS_INVALID"
	ERR_TOKEN_IS_EXPIRED ERROR_CODE = "ERR_TOKEN_IS_EXPIRED"

	ERR_REFRESH_TOKEN_INVALID ERROR_CODE = "ERR_REFRESH_TOKEN_INVALID"

	// user
	ERR_USERNAME_EXISTS           ERROR_CODE = "ERR_USERNAME_EXISTS"
	ERR_USERNAME_NOT_FOUND        ERROR_CODE = "ERR_USERNAME_NOT_FOUND"
	ERR_USER_NOTFOUND             ERROR_CODE = "ERR_USER_NOTFOUND"
	ERR_EMAIL_NOTFOUND            ERROR_CODE = "ERR_EMAIL_NOTFOUND"
	ERR_INVALID_USERNAME_PASSWORD ERROR_CODE = "ERR_INVALID_USERNAME_PASSWORD"
	ERR_MISSING_USER_ID           ERROR_CODE = "ERR_MISSING_USER_ID"
	ERR_CURRENT_PASSWORD_INVALID  ERROR_CODE = "ERR_CURRENT_PASSWORD_INVALID"
	ERR_PASSWORD_INVALID          ERROR_CODE = "ERR_PASSWORD_INVALID"
	ERR_USERNAME_IS_EXISTED       ERROR_CODE = "ERR_USERNAME_IS_EXISTED"
	ERR_USER_CODE_IS_EXISTED      ERROR_CODE = "ERR_USER_CODE_IS_EXISTED"
	ERR_USER_CODE_IS_INVALID      ERROR_CODE = "ERR_USER_CODE_IS_INVALID"

	// role
	ERR_ROLE_NOTFOUND ERROR_CODE = "ERR_ROLE_NOTFOUND"

	// business unit
	ERR_BUSINESS_UNIT_NOTFOUND ERROR_CODE = "ERR_BUSINESS_UNIT_NOTFOUND"

	// group
	ERR_GROUP_CODE_IS_EXISTED ERROR_CODE = "ERR_GROUP_CODE_IS_EXISTED"
	ERR_GROUP_NOTFOUND        ERROR_CODE = "ERR_GROUP_NOTFOUND"
	ERR_PARENT_GROUP_NOTFOUND ERROR_CODE = "ERR_PARENT_GROUP_NOTFOUND"

	// service
	ERR_SERVICE_NOTFOUND      ERROR_CODE = "ERR_SERVICE_NOTFOUND"
	ERR_USER_SERVICE_NOTFOUND ERROR_CODE = "ERR_USER_SERVICE_NOTFOUND"

	// tenant
	ERR_TENANT_NOTFOUND ERROR_CODE = "ERR_TENANT_NOTFOUND"

	// feature
	ERR_FEATURE_NOTFOUND ERROR_CODE = "ERR_FEATURE_NOTFOUND"
	ERR_FEATURE_EXIST    ERROR_CODE = "ERR_FEATURE_EXIST"

	ERR_PARAMETER_NOTFOUND ERROR_CODE = "ERR_PARAMETER_NOTFOUND"
	ERR_PARAMETER_EXIST    ERROR_CODE = "ERR_PARAMETER_EXIST"

	// request
	ERR_REQUEST_INVALID         ERROR_CODE = "ERR_REQUEST_INVALID"
	ERR_REQUEST_IS_EXISTED      ERROR_CODE = "ERR_REQUEST_IS_EXISTED"
	ERR_REQUEST_NOTFOUND        ERROR_CODE = "ERR_REQUEST_NOTFOUND"
	ERR_REQUEST_IS_EXPIRED      ERROR_CODE = "ERR_REQUEST_IS_EXPIRED"
	ERR_REQUEST_CODE_IS_INVALID ERROR_CODE = "ERR_REQUEST_CODE_IS_INVALID"

	// collection campaign
	ERR_COL_CAMPAIGN_NOTFOUND              ERROR_CODE = "ERR_COL_CAMPAIGN_NOTFOUND"
	ERR_COL_CAMPAIGN_INVALID               ERROR_CODE = "ERR_COL_CAMPAIGN_INVALID"
	ERR_COL_CAMPAIGN_STATUS_INVALID        ERROR_CODE = "ERR_COL_CAMPAIGN_STATUS_INVALID"
	ERR_COL_CAMPAIGN_ALREADY_RUNNING       ERROR_CODE = "ERR_COL_CAMPAIGN_ALREADY_RUNNING"
	ERR_COL_CAMPAIGN_ALREADY_STOPPED       ERROR_CODE = "ERR_COL_CAMPAIGN_ALREADY_STOPPED"
	ERR_COL_CAMPAIGN_ALREADY_PAUSED        ERROR_CODE = "ERR_COL_CAMPAIGN_ALREADY_PAUSED"
	ERR_COL_CAMPAIGN_NAME_IS_ALREADY_EXIST ERROR_CODE = "ERR_COL_CAMPAIGN_NAME_IS_ALREADY_EXIST"

	// collection call center list
	ERR_COL_CALLCENTER_LIST_NOTFOUND              ERROR_CODE = "ERR_COL_CALLCENTERLIST_NOTFOUND"
	ERR_COL_CALLCENTER_LIST_DISABLED              ERROR_CODE = "ERR_COL_CALLCENTERLIST_DISABLED"
	ERR_COL_CALLCENTER_LIST_NAME_IS_ALREADY_EXIST ERROR_CODE = "ERR_COL_CALLCENTERLIST_NAME_IS_ALREADY_EXIST"
	ERR_COL_CALLCENTER_LIST_NOT_ALLOW_TO_ACTIVE   ERROR_CODE = "ERR_COL_CALLCENTERLIST_NOT_ALLOW_TO_ACTIVE"

	// collection customer
	ERR_COL_CUSTOMER_NOTFOUND         ERROR_CODE = "ERR_COL_CUSTOMER_NOTFOUND"
	ERR_COL_CUSTOMER_STATUS_INVALID   ERROR_CODE = "ERR_COL_CUSTOMER_STATUS_INVALID"
	ERR_COL_CUSTOMER_CONTACT_NOTFOUND ERROR_CODE = "ERR_COL_CUSTOMER_CONTACT_NOTFOUND"

	// collection case
	ERR_COL_CASE_NOTFOUND ERROR_CODE = "ERR_COL_CASE_NOTFOUND"

	// collection case document
	ERR_COL_CASE_DOCUMENT_NOTFOUND ERROR_CODE = "ERR_COL_CASE_DOCUMENT_NOTFOUND"

	// collection case visit
	ERR_COL_CASE_VISIT_IS_EXISTED          ERROR_CODE = "ERR_COL_CASE_VISIT_IS_EXISTED"
	ERR_COL_CASE_VISIT_NOTFOUND            ERROR_CODE = "ERR_COL_CASE_VISIT_NOTFOUND"
	ERR_COL_CASE_VISIT_NOT_ALLOW_TO_CREATE ERROR_CODE = "ERR_COL_CASE_VISIT_NOT_ALLOW_TO_CREATE"
	ERR_COL_CASE_VISIT_NOT_ALLOW_TO_UPDATE ERROR_CODE = "ERR_COL_CASE_VISIT_NOT_ALLOW_TO_UPDATE"
	ERR_COL_CASE_VISIT_NOT_ALLOW_TO_DELETE ERROR_CODE = "ERR_COL_CASE_VISIT_NOT_ALLOW_TO_DELETE"

	// collection case assignment
	ERR_COL_CASE_ASSIGNMENT_IS_EXISTED   ERROR_CODE = "ERR_COL_CASE_ASSIGNMENT_IS_EXISTED"
	ERR_COL_CASE_ASSIGNMENT_NOTFOUND     ERROR_CODE = "ERR_COL_CASE_ASSIGNMENT_NOTFOUND"
	ERR_COL_CASE_ASSIGNMENT_FILE_INVALID ERROR_CODE = "ERR_COL_CASE_ASSIGNMENT_FILE_INVALID"

	// collection contact
	ERR_COL_CONTACT_NOTFOUND ERROR_CODE = "ERR_COL_CONTACT_NOTFOUND"

	// collection customer address
	ERR_COL_CUSTOMER_ADDRESS_NOTFOUND     ERROR_CODE = "ERR_COL_CUSTOMER_ADDRESS_NOTFOUND"
	ERR_COL_CUSTOMER_ADDRESS_INVALID      ERROR_CODE = "ERR_COL_CUSTOMER_ADDRESS_INVALID"
	ERR_COL_CUSTOMER_ADDRESS_EXISTED      ERROR_CODE = "ERR_COL_CUSTOMER_ADDRESS_EXISTED"
	ERR_COL_CUSTOMER_ADDRESS_NOT_INIT_YET ERROR_CODE = "ERR_COL_CUSTOMER_ADDRESS_NOT_INIT_YET"

	ERR_USER_NOT_HAVE_EXTENSION ERROR_CODE = "ERR_USER_NOT_HAVE_EXTENSION"

	ERR_COL_MISSING_PLUGIN         ERROR_CODE = "ERR_COL_MISSING_PLUGIN"
	ERR_COL_PLUGIN_NOT_IMPLEMENTED ERROR_CODE = "ERR_COL_PLUGIN_NOT_IMPLEMENTED"
	ERR_COL_VOIP_GATEWAY_NOTFOUND  ERROR_CODE = "ERR_COL_VOIP_GATEWAY_NOTFOUND"
	ERR_COL_VOIP_GATEWAY_INVALID   ERROR_CODE = "ERR_COL_VOIP_GATEWAY_INVALID"
	ERR_COL_VOIP_TRUNK_NOTFOUND    ERROR_CODE = "ERR_COL_VOIP_TRUNK_NOTFOUND"
	ERR_COL_MISSING_VOIP_GATEWAY   ERROR_CODE = "ERR_COL_MISSING_VOIP_GATEWAY"

	ERR_COL_CALLCENTER_USER_NOT_LOGIN ERROR_CODE = "ERR_COL_CALLCENTER_USER_NOT_LOGIN"

	ERR_COL_WORKDAY_NOTFOUND    ERROR_CODE = "ERR_COL_WORKDAY_NOTFOUND"
	ERR_COL_WORKDAY_INVALID     ERROR_CODE = "ERR_COL_WORKDAY_INVALID"
	ERR_COL_WORKDAY_NOT_ALLOWED ERROR_CODE = "ERR_COL_WORKDAY_NOT_ALLOWED"
	// collection case event
	ERR_COL_CASE_EVENT_DONE ERROR_CODE = "ERR_COL_CASE_EVENT_DONE"

	ERR_JOB_NOT_FOUND        ERROR_CODE = "ERR_JOB_NOT_FOUND"
	ERR_JOB_STATUS_INVALID   ERROR_CODE = "ERR_JOB_STATUS_INVALID"
	ERR_COL_ENTITY_NOT_FOUND ERROR_CODE = "ERR_COL_ENTITY_NOT_FOUND"
	ERR_COL_CODE_NOTFOUND    ERROR_CODE = "ERR_COL_CODE_NOTFOUND"
)

var MAP_ERROR_CODE = map[ERROR_CODE]string{
	ERR_UNAUTHORIZED:                       "unauthorized",
	ERR_FORBIDDEN:                          "forbidden",
	ERR_SERVICE_UNAVAILABLE:                "service unavailable",
	ERR_INTERNAL_SERVER_ERROR:              "internal server error",
	ERR_NOT_IMPLEMENTED:                    "not implemented",
	ERR_NOT_IMPLEMENT_FOR_MASTER:           "not implemented for master",
	ERR_USERNAME_NOT_FOUND:                 "username not found",
	ERR_USERNAME_EXISTS:                    "username exists",
	ERR_USER_NOTFOUND:                      "user not found",
	ERR_USER_NOT_HAVE_EXTENSION:            "user not have extension",
	ERR_EMAIL_NOTFOUND:                     "email not found",
	ERR_TOKEN_IS_EMPTY:                     "token is empty",
	ERR_TOKEN_IS_INVALID:                   "token is invalid",
	ERR_TOKEN_IS_EXPIRED:                   "token is expired",
	ERR_REFRESH_TOKEN_INVALID:              "refresh token invalid",
	ERR_INVALID_USERNAME_PASSWORD:          "username or password invalid",
	ERR_MISSING_USER_ID:                    "missing user id",
	ERR_CURRENT_PASSWORD_INVALID:           "current password invalid",
	ERR_PASSWORD_INVALID:                   "password invalid",
	ERR_USERNAME_IS_EXISTED:                "username is existed",
	ERR_USER_CODE_IS_EXISTED:               "user code is existed",
	ERR_USER_CODE_IS_INVALID:               "user code is invalid",
	ERR_GROUP_CODE_IS_EXISTED:              "group code is existed",
	ERR_ROLE_NOTFOUND:                      "role not found",
	ERR_BUSINESS_UNIT_NOTFOUND:             "business unit not found",
	ERR_GROUP_NOTFOUND:                     "group not found",
	ERR_PARENT_GROUP_NOTFOUND:              "parent group not found",
	ERR_SERVICE_NOTFOUND:                   "service not found",
	ERR_USER_SERVICE_NOTFOUND:              "user service not found",
	ERR_TENANT_NOTFOUND:                    "tenant not found",
	ERR_FEATURE_NOTFOUND:                   "feature not found",
	ERR_FEATURE_EXIST:                      "feature already exist",
	ERR_PARAMETER_NOTFOUND:                 "parameter not found",
	ERR_PARAMETER_EXIST:                    "parameter already exist",
	ERR_REQUEST_INVALID:                    "request invalid",
	ERR_REQUEST_IS_EXISTED:                 "request is existed",
	ERR_REQUEST_NOTFOUND:                   "request not found",
	ERR_REQUEST_IS_EXPIRED:                 "request is expired",
	ERR_REQUEST_CODE_IS_INVALID:            "request code is invalid",
	ERR_COL_CAMPAIGN_NOTFOUND:              "campaign not found",
	ERR_COL_CAMPAIGN_INVALID:               "campaign invalid",
	ERR_COL_CAMPAIGN_STATUS_INVALID:        "campaign status invalid",
	ERR_COL_CAMPAIGN_ALREADY_RUNNING:       "campaign already running",
	ERR_COL_CAMPAIGN_ALREADY_STOPPED:       "campaign already stopped",
	ERR_COL_CAMPAIGN_ALREADY_PAUSED:        "campaign already paused",
	ERR_COL_CAMPAIGN_NAME_IS_ALREADY_EXIST: "campaign name is already exist",

	ERR_COL_CUSTOMER_NOTFOUND:       "customer not found",
	ERR_COL_CUSTOMER_STATUS_INVALID: "customer status invalid",
	ERR_COL_CASE_NOTFOUND:           "case not found",

	ERR_COL_CASE_VISIT_IS_EXISTED:          "case visit is existed",
	ERR_COL_CASE_VISIT_NOTFOUND:            "case visit not found",
	ERR_COL_CASE_VISIT_NOT_ALLOW_TO_CREATE: "case visit not allow to create",
	ERR_COL_CASE_VISIT_NOT_ALLOW_TO_UPDATE: "case visit not allow to update",
	ERR_COL_CASE_VISIT_NOT_ALLOW_TO_DELETE: "case visit not allow to delete",

	ERR_COL_CASE_ASSIGNMENT_IS_EXISTED:   "case assignment is existed",
	ERR_COL_CASE_ASSIGNMENT_NOTFOUND:     "case assignment not found",
	ERR_COL_CASE_ASSIGNMENT_FILE_INVALID: "case assignment file invalid",
	ERR_COL_CASE_DOCUMENT_NOTFOUND:       "case document not found",
	ERR_COL_CONTACT_NOTFOUND:             "contact not found",
	ERR_FILE_NOT_FOUND:                   "file not found",
	ERR_COL_MISSING_PLUGIN:               "missing plugin",
	ERR_COL_MISSING_VOIP_GATEWAY:         "missing voip gateway",
	ERR_COL_PLUGIN_NOT_IMPLEMENTED:       "plugin not implemented",

	ERR_COL_VOIP_GATEWAY_NOTFOUND: "voip gateway not found",
	ERR_COL_VOIP_GATEWAY_INVALID:  "voip gateway invalid",
	ERR_COL_VOIP_TRUNK_NOTFOUND:   "voip trunk not found",
	ERR_COL_CASE_EVENT_DONE:       "case is done",

	ERR_COL_WORKDAY_NOTFOUND:    "workday not found",
	ERR_COL_WORKDAY_INVALID:     "workday invalid",
	ERR_COL_WORKDAY_NOT_ALLOWED: "workday not allowed",

	ERR_COL_CALLCENTER_LIST_NOTFOUND:              "list not found",
	ERR_COL_CALLCENTER_LIST_DISABLED:              "list is disabled",
	ERR_COL_CALLCENTER_LIST_NAME_IS_ALREADY_EXIST: "list name is already exist",
	ERR_COL_CALLCENTER_LIST_NOT_ALLOW_TO_ACTIVE:   "list not allow to active",

	ERR_COL_CUSTOMER_ADDRESS_NOTFOUND:     "customer address not found",
	ERR_COL_CUSTOMER_ADDRESS_INVALID:      "customer address invalid",
	ERR_COL_CUSTOMER_ADDRESS_NOT_INIT_YET: "customer address not init yet",
	ERR_COL_CUSTOMER_CONTACT_NOTFOUND:     "customer contact not found",

	ERR_JOB_NOT_FOUND:        "job not found",
	ERR_JOB_STATUS_INVALID:   "job status invalid",
	ERR_COL_ENTITY_NOT_FOUND: "entity not found",
	ERR_COL_CODE_NOTFOUND:    "code not found",
}

func NewError(code ERROR_CODE) ERROR_MSG {
	return fmt.Errorf("%s", code)
}
